<feed xmlns="http://www.w3.org/2005/Atom">
  <title>.NET related GitHub Releases</title>
  <link href="https://github.com/mayuki/WatchDotNetGitHubRepos" />
  <updated>2022-05-26T00:05:30Z</updated>
  <id>https://github.com/mayuki/WatchDotNetGitHubRepos</id>
  <entry>
    <title>autofac/Autofac - Releases - 2022-05-25</title>
    <id>https://github.com/autofac/Autofac#2022-05-25</id>
    <link href="https://github.com/autofac/Autofac" />
    <updated>2022-05-26T00:05:09Z</updated>
    <content type="html">
                &lt;div&gt;
                    
                        &lt;article&gt;
                            &lt;h2&gt;&lt;a href="https://github.com/autofac/Autofac/releases/tag/v6.4.0"&gt;v6.4.0&lt;/a&gt;&lt;/h2&gt;
                            &lt;div&gt;
                                &lt;ul&gt;
&lt;li&gt;Fix typos in exception messages (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1076848993" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1301" data-hovercard-type="issue" data-hovercard-url="/autofac/Autofac/issues/1301/hovercard" href="https://github.com/autofac/Autofac/issues/1301"&gt;#1301&lt;/a&gt;, &lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1077768447" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1302" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1302/hovercard" href="https://github.com/autofac/Autofac/pull/1302"&gt;#1302&lt;/a&gt;, &lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1195593455" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1323" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1323/hovercard" href="https://github.com/autofac/Autofac/pull/1323"&gt;#1323&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Enable open generic assembly scanning to use &lt;code&gt;WithMetadata&lt;/code&gt; and generate metadata (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1075671835" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1299" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1299/hovercard" href="https://github.com/autofac/Autofac/pull/1299"&gt;#1299&lt;/a&gt; - thanks &lt;a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/romerod/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/romerod"&gt;@romerod&lt;/a&gt;!)&lt;/li&gt;
&lt;li&gt;Package targets .NET 6 TFM (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1148373803" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1306" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1306/hovercard" href="https://github.com/autofac/Autofac/pull/1306"&gt;#1306&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;README included in NuGet package (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1057647528" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1295" data-hovercard-type="issue" data-hovercard-url="/autofac/Autofac/issues/1295/hovercard" href="https://github.com/autofac/Autofac/issues/1295"&gt;#1295&lt;/a&gt;, &lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1149039336" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1308" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1308/hovercard" href="https://github.com/autofac/Autofac/pull/1308"&gt;#1308&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Symbols published in .snupkg format (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="455342254" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/995" data-hovercard-type="issue" data-hovercard-url="/autofac/Autofac/issues/995/hovercard" href="https://github.com/autofac/Autofac/issues/995"&gt;#995&lt;/a&gt;, &lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1149594827" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1309" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1309/hovercard" href="https://github.com/autofac/Autofac/pull/1309"&gt;#1309&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Fix issue where changing type parameter &lt;em&gt;names&lt;/em&gt; caused generic resolution to fail (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1173603792" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1315" data-hovercard-type="issue" data-hovercard-url="/autofac/Autofac/issues/1315/hovercard" href="https://github.com/autofac/Autofac/issues/1315"&gt;#1315&lt;/a&gt;, &lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1173823163" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1316" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1316/hovercard" href="https://github.com/autofac/Autofac/pull/1316"&gt;#1316&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Added generic delegates to make registering lambda components easier (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1186854491" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1320" data-hovercard-type="issue" data-hovercard-url="/autofac/Autofac/issues/1320/hovercard" href="https://github.com/autofac/Autofac/issues/1320"&gt;#1320&lt;/a&gt;, &lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1187644105" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1321" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1321/hovercard" href="https://github.com/autofac/Autofac/pull/1321"&gt;#1321&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Optimization of reflection activation for components that only have one constructor (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1198491772" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1325" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1325/hovercard" href="https://github.com/autofac/Autofac/pull/1325"&gt;#1325&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The new feature to be aware of here is the generic delegates for making lambda registrations easier (&lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1186854491" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1320" data-hovercard-type="issue" data-hovercard-url="/autofac/Autofac/issues/1320/hovercard" href="https://github.com/autofac/Autofac/issues/1320"&gt;#1320&lt;/a&gt;, &lt;a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1187644105" data-permission-text="Title is private" data-url="https://github.com/autofac/Autofac/issues/1321" data-hovercard-type="pull_request" data-hovercard-url="/autofac/Autofac/pull/1321/hovercard" href="https://github.com/autofac/Autofac/pull/1321"&gt;#1321&lt;/a&gt;). It makes resolving dependencies in lambdas more straightforward.&lt;/p&gt;
&lt;p&gt;The old way meant injecting an &lt;code&gt;IComponentContext&lt;/code&gt; and resolving the dependencies manually.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="builder.Register(
  ctx =&amp;gt;
  {
    var dep1 = ctx.Resolve&amp;lt;IDependency1&amp;gt;();
    var dep2 = ctx.Resolve&amp;lt;IDependency2&amp;gt;();
    return new Component(dep1, dep2, &amp;quot;configuration-value&amp;quot;);
  });"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;builder&lt;/span&gt;.&lt;span class="pl-en"&gt;Register&lt;/span&gt;(
  &lt;span class="pl-en"&gt;ctx&lt;/span&gt; &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;dep1&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;Resolve&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IDependency1&lt;/span&gt;&amp;gt;();
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;dep2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;Resolve&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IDependency2&lt;/span&gt;&amp;gt;();
    &lt;span class="pl-k"&gt;return&lt;/span&gt; &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Component&lt;/span&gt;(&lt;span class="pl-smi"&gt;dep1&lt;/span&gt;, &lt;span class="pl-smi"&gt;dep2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;configuration-value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  });&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;That old way &lt;em&gt;still works and is not deprecated&lt;/em&gt;. You can keep doing that.&lt;/p&gt;
&lt;p&gt;However, you can now skip the manual resolutions and just provide the dependencies as the parameters to the lambda:&lt;/p&gt;
&lt;div class="highlight highlight-source-cs notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="builder.Register(
  (IDependency dep1, IDependency dep2) =&amp;gt;
    new Component(dep1, dep2, &amp;quot;configuration-value&amp;quot;));"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;builder&lt;/span&gt;.&lt;span class="pl-en"&gt;Register&lt;/span&gt;(
  (&lt;span class="pl-en"&gt;IDependency&lt;/span&gt; &lt;span class="pl-en"&gt;dep1&lt;/span&gt;, &lt;span class="pl-en"&gt;IDependency&lt;/span&gt; &lt;span class="pl-en"&gt;dep2&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Component&lt;/span&gt;(&lt;span class="pl-smi"&gt;dep1&lt;/span&gt;, &lt;span class="pl-smi"&gt;dep2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;configuration-value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you need both the context &lt;em&gt;and&lt;/em&gt; dependencies for advanced cases, you can do that, too.&lt;/p&gt;
&lt;div class="highlight highlight-source-cs notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="builder.Register(
  (IComponentContext ctx, IDependency dep1) =&amp;gt;
  {
    var dep2 = ctx.Resolve&amp;lt;IDependency2&amp;gt;(new NamedParameter(&amp;quot;p&amp;quot;, &amp;quot;someValue&amp;quot;));
    new Component(dep1, dep2, &amp;quot;configuration-value&amp;quot;);
  });"&gt;&lt;pre&gt;&lt;span class="pl-smi"&gt;builder&lt;/span&gt;.&lt;span class="pl-en"&gt;Register&lt;/span&gt;(
  (&lt;span class="pl-en"&gt;IComponentContext&lt;/span&gt; &lt;span class="pl-en"&gt;ctx&lt;/span&gt;, &lt;span class="pl-en"&gt;IDependency&lt;/span&gt; &lt;span class="pl-en"&gt;dep1&lt;/span&gt;) &lt;span class="pl-k"&gt;=&amp;gt;&lt;/span&gt;
  {
    &lt;span class="pl-k"&gt;var&lt;/span&gt; &lt;span class="pl-en"&gt;dep2&lt;/span&gt; &lt;span class="pl-k"&gt;=&lt;/span&gt; &lt;span class="pl-smi"&gt;ctx&lt;/span&gt;.&lt;span class="pl-en"&gt;Resolve&lt;/span&gt;&amp;lt;&lt;span class="pl-en"&gt;IDependency2&lt;/span&gt;&amp;gt;(&lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;NamedParameter&lt;/span&gt;(&lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;p&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;someValue&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;));
    &lt;span class="pl-k"&gt;new&lt;/span&gt; &lt;span class="pl-en"&gt;Component&lt;/span&gt;(&lt;span class="pl-smi"&gt;dep1&lt;/span&gt;, &lt;span class="pl-smi"&gt;dep2&lt;/span&gt;, &lt;span class="pl-s"&gt;&lt;span class="pl-pds"&gt;"&lt;/span&gt;configuration-value&lt;span class="pl-pds"&gt;"&lt;/span&gt;&lt;/span&gt;);
  });&lt;/pre&gt;&lt;/div&gt;
                            &lt;/div&gt;
                        &lt;/article&gt;
                    
                &lt;/div&gt;
            </content>
  </entry>
</feed>