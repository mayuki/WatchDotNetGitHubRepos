<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dotnet/runtimelab - Issues &amp; Pull Requests</title>
  <link href="https://github.com/dotnet/runtimelab" />
  <updated>2025-02-25T00:06:22Z</updated>
  <id>https://github.com/dotnet/runtimelab</id>
  <entry>
    <title>dotnet/runtimelab - Issues &amp; Pull Requests - 2025-02-24</title>
    <id>https://github.com/dotnet/runtimelab#2025-02-24</id>
    <link href="https://github.com/dotnet/runtimelab" />
    <updated>2025-02-25T00:06:22Z</updated>
    <content type="html">&lt;section&gt;
  &lt;h2&gt;Issues&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/issues/3022"&gt;[Swift language feature] Implement generic return type in Swift async functions #3022&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/issues/3020"&gt;[Swift language features] Retain result in the generated Swift async wrapper #3020&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/issues/3019"&gt;[Swift ABI compatibility] Hint the GC to collect large native memory blobs using GC.AddMemoryPressure #3019&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/issues/3018"&gt;[Swift ABI compatibility] Implement Swift payload as SafeHandler to decouple IDisposable from the bindings #3018&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;&lt;section&gt;
  &lt;h2&gt;PullRequests&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/pull/3023"&gt;[Swift language feature] Implement generic parameters/types with generics in Swift async functions #3023&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-SwiftBindings&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Merged&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/pull/3016"&gt;[SwiftBindings] Add type for storing information about csharp type name #3016&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-SwiftBindings&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/pull/3021"&gt;Update CreateAnExperiment.md #3021&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/pull/2951"&gt;Implement a change in IL API to use RuntimeHelpers.Await&amp;lt;T&amp;gt;(Task&amp;lt;T&amp;gt;) and similar helpers. #2951&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Updated&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/pull/3008"&gt;[Swift ABI compatibility] Document memory ownership and handling at the Swift–C# boundary #3008&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-SwiftBindings&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/pull/3009"&gt;[Swift ABI compatibility] Functional tests for `InitWithCopy` and `Destroy` functions in value witness table #3009&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-SwiftBindings&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtimelab/pull/3014"&gt;[Swift shipping] Add `Swift.Bindings.Experimental` nuget to `dotnet-experimental` for device tests #3014&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-SwiftBindings&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;</content>
  </entry>
</feed>