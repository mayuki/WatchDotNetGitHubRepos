<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dotnet/roslyn - Issues &amp; Pull Requests</title>
  <link href="https://github.com/dotnet/roslyn" />
  <updated>2023-07-19T00:05:19Z</updated>
  <id>https://github.com/dotnet/roslyn</id>
  <entry>
    <title>dotnet/roslyn - Issues &amp; Pull Requests - 2023-07-18</title>
    <id>https://github.com/dotnet/roslyn#2023-07-18</id>
    <link href="https://github.com/dotnet/roslyn" />
    <updated>2023-07-19T00:05:19Z</updated>
    <content type="html">&lt;section&gt;
  &lt;h2&gt;Issues&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69099"&gt;Unindent doesn't work well in multi-line strings #69099&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69094"&gt;IDE0200 mis-fires, 'fixes' code to be defective #69094&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69093"&gt;Ensure HasAnonymousFunctionConversion returns without binding lambda body for explicitly-typed lambda #69093&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69092"&gt;error MSB4064: The "ReportIVTs" parameter is not supported by the "Csc" task loaded from assembly: Microsoft.Build.Tasks.CodeAnalysis #69092&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69084"&gt;Diagnostics are propagated from referenced compilation in tests #69084&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69079"&gt;No `modreq(In)` emitted for synthesized delegate `Invoke` method #69079&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69078"&gt;Multiple distinct default values error incorrectly reported #69078&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69077"&gt;Merging CodeStyle and Features layers #69077&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69075"&gt;The "Include snippets when ?-Tab is typed after an identifier" option is displayed incorrectly, or is unclear, or doesn't work #69075&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Closed&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69103"&gt;Generics are assumed to be nullable types and lose nullable annotations #69103&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/67258"&gt;CS7038: Failed to emit module 'name': Unable to determine specific cause of the failure. #67258&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69097"&gt;[Automated] PRs inserted in VS build main-33918.294 #69097&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/68817"&gt;'Create and assign [field|property]' does not work for primary constructor parameters #68817&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69087"&gt;Invalid refactoring suggestion for expression with int? when part of string interpolation #69087&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69080"&gt;False positive for CS8604 when using the logical XOR operator #69080&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/44551"&gt;Update "propdp" snippet to use nameof #44551&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/56012"&gt;Use a BitVector instead of bool[] in MethodTypeInferrer.FixParameters #56012&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69051"&gt;Disallow extension methods lookup on non-static or generic types #69051&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/69041"&gt;Compiler doesn't tokenize surrogate pairs correctly #69041&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;&lt;section&gt;
  &lt;h2&gt;PullRequests&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69102"&gt;Address feedback on File types EE support #69102&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69101"&gt;Don't offer to simplify lambdas if it would change semantics #69101&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69100"&gt;Pull request review policy update #69100&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69098"&gt;Implement `IsMoveableVariable` check for inline array element access. #69098&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Feature - Inline Arrays&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69096"&gt;Disallow declaring readonly, volatile, or fixed size buffer fields as element fields of an inline array type. #69096&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Feature - Inline Arrays&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69095"&gt;Remove tracking link to issue 44902 #69095&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69091"&gt;Add missing IDE buddies to feature status page #69091&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Documentation, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69088"&gt;Run ref safety analysis for field initializers on bound nodes transformed to assignments to the target fields. #69088&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Language Feature - Ref Fields, New Feature - Primary Constructors&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69085"&gt;Add support for IDE scenarios related to `ref readonly` parameters #69085&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, New Feature - Ref Readonly Parameters, C# 12.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69083"&gt;Suppress `ref readonly` warning for extension method receiver #69083&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, New Feature - Ref Readonly Parameters, C# 12.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69082"&gt;Remove remaining `ref readonly` prototype comments #69082&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Feature - Ref Readonly Parameters&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69081"&gt;Enable Binskim scan in CI builds #69081&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, Community, untriaged&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Merged&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68967"&gt;Fix missing duplicate diagnostic for enum declarations #68967&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68854"&gt;Semantic snippets - `svm` and `sim` snippets #68854&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, Community, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68772"&gt;Remove redundant SourceBuildTrimNetFrameworkTargets property #68772&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, Community, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69072"&gt;Update 'initialize member from parameter' to work with primary constructors. #69072&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69089"&gt;Fix issue where we were offering an invalid coalesce (??) simplication #69089&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68936"&gt;Reduce allocations of Location instances #68936&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69086"&gt;Convert several other types over to being records. #69086&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69005"&gt;Simplify core lexing switch #69005&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69090"&gt;Mark interceptors feature as merged #69090&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68956"&gt;Move several value types over to being records #68956&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69069"&gt;Reduce bool array allocations in MethodTypeInferrer.FixParameters #69069&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69071"&gt;Reduce TypeWithAnnotations array allocations for code path that don't use them #69071&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Updated&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68991"&gt;Avoid giving 'no best type' error when one of the types contains error types #68991&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/59086"&gt;Remove extra logic to see if users are squatting on keywords #59086&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68283"&gt;Fix Color Color const field initialization accessing the Color type #68283&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, untriaged, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68226"&gt;Rationalize how temporary directory works today #68226&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68527"&gt;Don't report CLS compliance warnings for attributes on inacessible types #68527&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68680"&gt;Relax ref readonly parameter signature matching #68680&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Feature - Ref Readonly Parameters, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68076"&gt;Reduce allocations observed in local trace opening Roslyn.sln #68076&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68030"&gt;Fix internal compiler error when handling DynamicObjectCreationExpression #68030&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, untriaged, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/67891"&gt;Flatten merged namespaces #67891&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/67881"&gt;Implement ISymbol.LocationList #67881&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Performance-Scenario-Diagnostics, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/67736"&gt;Improve detection of receiver cloning in ref safety analysis #67736&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Language Feature - Ref Fields, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/66585"&gt;List patterns: Avoid generating arbitrarily long pattern examples #66585&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/66692"&gt;List patterns: Trigger merging of values even if the precondition is already met #66692&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, New Feature - List Patterns, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/63444"&gt;Track 'default(T)' null checks #63444&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, New Language Feature - Nullable Reference Types, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69064"&gt;Warn that a user-defined API on an inline array type won’t be used by the language for an element access expression #69064&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Feature - Inline Arrays, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/66519"&gt;Annotate MS.CA and MS.CA.C# for trimming #66519&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/66553"&gt;List patterns: Add initial support for enumerables #66553&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/39805"&gt;Allow index initialisers to be used in fixed size buffers. #39805&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Blocked, Community, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/62641"&gt;Run suppressors insofar as there are suppressible errors #62641&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Blocked, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/63310"&gt;Track MemberNotNull for local functions #63310&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Blocked, Community, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69032"&gt;Allow default values for `ref readonly` parameters #69032&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, New Feature - Ref Readonly Parameters, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69034"&gt;Widen `RefKindVector` to hold `RefReadonlyParameter` #69034&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, New Feature - Ref Readonly Parameters, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69031"&gt;Update Compiler Breaking Changes documentation (VS2015 - VS2019) #69031&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, untriaged, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/65192"&gt;Update CSharpErrorFactsGenerator to be a source generator #65192&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68381"&gt;Update taggers to cooperate with each other for accessing the UI thread. #68381&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68765"&gt;Improve sequence point placement in primary constructors and records #68765&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68930"&gt;Collection literals: collection builder methods #68930&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68992"&gt;Require `SizeConst` for `UnmanagedType.ByValArray` #68992&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68830"&gt;Source generators/track values etw #68830&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/62771"&gt;All pull diagnostics changes. #62771&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/62735"&gt;Remove 'Push' diagnostics option #62735&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/62741"&gt;Remove roslyn implementation of error list #62741&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69017"&gt;Consolidate Interlocked initialize implementations #69017&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/67684"&gt;Bot rules for stale issues and PRs #67684&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69066"&gt;Localize C# Interactive window title #69066&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Interactive, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68694"&gt;Avoid creating a result temp for is-expressions #68694&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68989"&gt;Find compatible substituted implicit extensions #68989&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, 17.8&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69065"&gt;Update ICSharpCode.Decompiler to 7.2.1.6856 (#67875) #69065&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69020"&gt;Relax method conversions with ref readonly parameters #69020&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, New Feature - Ref Readonly Parameters&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69070"&gt;Reduce `HashSet&amp;lt;TypeWithAnnotations&amp;gt;` allocations in MethodTypeInferrer.Fix #69070&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/68892"&gt;Add effective severities custom property array to error log #68892&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Analyzers, Area-Compilers, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69040"&gt;Reduce `TypeConversions` allocations by caching them in AssemblySymbol #69040&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Community, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/69028"&gt;Pc active statements #69028&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Interactive, untriaged&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;</content>
  </entry>
</feed>