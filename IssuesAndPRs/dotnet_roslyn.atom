<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dotnet/roslyn - Issues &amp; Pull Requests</title>
  <link href="https://github.com/dotnet/roslyn" />
  <updated>2024-12-13T00:06:37Z</updated>
  <id>https://github.com/dotnet/roslyn</id>
  <entry>
    <title>dotnet/roslyn - Issues &amp; Pull Requests - 2024-12-12</title>
    <id>https://github.com/dotnet/roslyn#2024-12-12</id>
    <link href="https://github.com/dotnet/roslyn" />
    <updated>2024-12-13T00:06:37Z</updated>
    <content type="html">&lt;section&gt;
  &lt;h2&gt;Issues&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76409"&gt;.editorconfig is ignored during "Change namespace to match folder structure" #76409&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76401"&gt;Unexpected error "feature 'ref struct interfaces' is not available" #76401&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76398"&gt;Argument contains duplicate analyzer instances. (Parameter 'analyzers') #76398&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76397"&gt;Area - Simplify LINQ Expression #76397&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76396"&gt;No ability to disable fading for unused private methods analyzer #76396&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76394"&gt;NullReferenceException when invoking the compiler (building roslyn inside the VMR) #76394&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76391"&gt;Interpolated string handler: inconsistent use of AppendFormatted when appending constants #76391&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76390"&gt;Roslyn crashes when reporting an error with an "unusual" compilation unit name #76390&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Closed&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/68051"&gt;IDE0038 ignores scopes of variables with same (re-defined) name, ignores static lambdas, and produces invalid code #68051&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/39600"&gt;IDE0019 suggests pattern matching but the generated pattern matching changes the meaning of the code #39600&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/64597"&gt;Not offered to "Extract Method" when resulting async method produces two values #64597&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;18.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/67647"&gt;Extracting method after confirmations does nothing #67647&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/73799"&gt;Method defining line move when adding code before method declaration #73799&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76188"&gt;Area - IDE #76188&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76341"&gt;Interceptors should not internally identify calls using paths #76341&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;17.13&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76140"&gt;CS8762 issues: unnecessarily pops up in a NotNullWhen+MaybeNullWhen combination and in some cases doesn't pop up at all #76140&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;17.13&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76403"&gt;Const identifier not bound #76403&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/75828"&gt;`UnscopedRef` should not affect code under the old ref safety rules #75828&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;17.13&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/72301"&gt;`SyntaxFacts`' method can make assumptions aboun nonexistent syntax kinds #72301&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/67017"&gt;Extract method refactoring is not offered in the base class argument #67017&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;18.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/71428"&gt;Codefix `Add parameters to Ctor()` fails to add property assignment for primary constructor #71428&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;18.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76389"&gt;[Automated] PRs inserted in VS build main-35611.165 #76389&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/issues/76388"&gt;[Automated] PRs inserted in VS build feature.debugger.main-35611.202 #76388&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;&lt;section&gt;
  &lt;h2&gt;PullRequests&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76408"&gt;Update LOC branch to 17.13 #76408&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76407"&gt;Fix issue with 'use pattern matching' where it would cause a variable to not be considered assigned #76407&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76405"&gt;Port https://github.com/dotnet/roslyn/pull/76384 to main #76405&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76400"&gt;Rename 'scopeOfTheContainingExpression' to 'localScopeDepth' #76400&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76399"&gt;Optimize ProductDependencyGraph.DoesProjectTransitivelyDependOnProject #76399&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76395"&gt;ResultProvider: Consume DkmClrModuleInstance.GetMetaDataImportHolder #76395&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Interactive, Community, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76393"&gt;Small reduction in allocations in DateAndTimeLanguageDetector #76393&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76387"&gt;Merge release/dev17.13 to main #76387&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, auto-merge&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76386"&gt;Make extracted parameters non-nullable when possible.  #76386&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76385"&gt;Report inappropriate OverloadResolutionPriority attribute applications #76385&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Feature - Overload Resolution Priority&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Merged&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76357"&gt;Razor synchronize loader #76357&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76406"&gt;Fix issue with 'use pattern matching' innapropriately capturing variables across a lambda #76406&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76404"&gt;Do not offer 'use pattern matching' when it would change semantics #76404&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76402"&gt;Fix extract method in top level #76402&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76194"&gt;Fix issue where structure tag could get stuck at the wrong location #76194&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76344"&gt;Internally identify interceptions by content hash #76344&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Feature - Interceptors, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76383"&gt;Support returning tuples in extract method when ref/out are not possible. #76383&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/75930"&gt;Consider RefSafetyRules with UnscopedRef #75930&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76392"&gt;Merge main to VBOverloadResolutionPriority #76392&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Needs API Review, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76371"&gt;Add support for extract method in the PrimaryConstructor base list #76371&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76360"&gt;Update 'add parameter' to assign to field/property when adding a parameter to a primary constructor. #76360&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76361"&gt;Reduce allocations from doing repeated adds into an ImmutableDictionary in SolutionCompilationState.ComputeFrozenSnapshot #76361&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76384"&gt;Merge release/dev17.12 to release/dev17.13 #76384&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, auto-merge&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76376"&gt;Implement editorconfig serializer for naming style preferences (17.12) #76376&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76370"&gt;Reduce allocations in WithUsingNamespacesAndTypesBinder.GetForwardedToAssemblyInUsingNamespaces #76370&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, Next&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76382"&gt;Share more code in extract method #76382&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, untriaged, VSCode, Next&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Updated&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76312"&gt;Mark interceptors feature as stable and deprecate file path based attributes #76312&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Needs API Review, Feature - Interceptors&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76380"&gt;Cache the compilation states in compilation order to avoid recalculation #76380&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76351"&gt;feat(lsp): add --pipe parameter #76351&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-IDE, Community, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76354"&gt;Fix TFM inconsistency in BuildHost #76354&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76257"&gt;Dictionary expressions: initial binding and lowering support #76257&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Needs API Review, Feature - Dictionary Expressions&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76363"&gt;Do honor abstract required during state initialization in nullable #76363&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/75963"&gt;Close stale PRs #75963&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/75511"&gt;Handle deconstruct pattern in ref safety analysis #75511&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76296"&gt;Remove scope variance exceptions #76296&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76237"&gt;Check ref safety of arg mixing in collection initializers #76237&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Feature - Ref Fields, 17.13&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/75581"&gt;Warn for redundant pattern in `not ... or &amp;lt;redundant&amp;gt;` pattern #75581&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, VSCode&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76358"&gt;[WIP] Change PR Val builds to be test signed #76358&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Infrastructure, untriaged&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76009"&gt;Avoid reusing temps whose refs might be captured #76009&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/roslyn/pull/76300"&gt;Prefer ReadOnlySpan over Span as better conversion target #76300&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Area-Compilers, untriaged, Feature - First-class Span Types&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;</content>
  </entry>
</feed>