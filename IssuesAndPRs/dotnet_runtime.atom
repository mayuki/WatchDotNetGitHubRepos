<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dotnet/runtime - Issues &amp; Pull Requests</title>
  <link href="https://github.com/dotnet/runtime" />
  <updated>2025-03-05T00:06:19Z</updated>
  <id>https://github.com/dotnet/runtime</id>
  <entry>
    <title>dotnet/runtime - Issues &amp; Pull Requests - 2025-03-04</title>
    <id>https://github.com/dotnet/runtime#2025-03-04</id>
    <link href="https://github.com/dotnet/runtime" />
    <updated>2025-03-05T00:06:19Z</updated>
    <content type="html">&lt;section&gt;
  &lt;h2&gt;Issues&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113136"&gt;Recommend updating to msquic 2.4.8 #113136&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113134"&gt;[API Proposal]: Provide trim-safe overload for `ValidationContext` construction #113134&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113132"&gt;MemoryMarshal.{Try}Read/{Try}Write/AsRef should allow ref struct #113132&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113123"&gt;Microsoft.Extensions.Configuration add the ability to bypass "FormatException: A duplicate key" #113123&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Future&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113122"&gt;how to keep assemblyloadcontext alive after call Unload #113122&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113120"&gt;Directory.GetFiles() returns file paths with trailing spaces if the directory path has trailing spaces #113120&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113118"&gt;[API Proposal]: Flexible OpenSSL provider support #113118&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113117"&gt;Test failure: Loader/ExternalAssemblyProbe/ExternalAssemblyProbe/ExternalAssemblyProbe.cmd #113117&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113133"&gt;[Perf] Windows/x64: Perf_BinaryIntegerTensorPrimitives Regressions on 2/27/2025 6:42:04 PM +00:00 #113133&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113135"&gt;[Perf] Linux/x64: 1 System.Numerics.Tests.Perf_BigInteger Regression on 2/26/2025 8:50:59 PM +00:00 #113135&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113114"&gt;ThunkPool doesn't work with PROCESS_MITIGATION_DYNAMIC_CODE_POLICY #113114&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113109"&gt;Populate OTel Schema URL on HTTP Activity Sources and Meters #113109&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113108"&gt;Benchmark Regressions from Profile Maintenance and Block Layout Changes #113108&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113107"&gt;JIT: Field access of struct is not hoisted when bounds check is not eliminated #113107&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Future&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113106"&gt;Test failure: Regressions/coreclr/GitHub_35000/test35000/test35000.cmd #113106&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113104"&gt;Threaded jiterpreter is not available in .NET 9 #113104&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Future&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113103"&gt;Crash at Microsoft.Extensions.DependencyInjection.ServiceCollectionContainerBuilderExtensions.BuildServiceProvider(IServiceCollection services, ServiceProviderOptions options) #113103&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Closed&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/112497"&gt;PAL_SEHException thrown from managed code when called from native code #112497&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/112897"&gt;Signal SIGILL (Illegal instruction) code ILL_ILLOPN (Illegal operand) after migrate to .net9 #112897&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/40805"&gt;Investigate potential ARM64 perf improvements in AsciiUtility and Utf16Utility #40805&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113089"&gt;Mac OSX - Timer runs early and causes Elapsed Handler to execute twice. #113089&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/112290"&gt;Implementation of AppContext.BaseDirectory and DllImportSearchPath.AssemblyDirectory handling on NativeAOT in the SharedLibrary scenario is unintuitive #112290&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/90131"&gt;NativeAOT Libraries support for `DllImportSearchPath.AssemblyDirectory` is undefined #90131&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Future&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113077"&gt;error CS1056: Unexpected character '−' with Regex on Mac #113077&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/63651"&gt;Add schema URL support #63651&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113119"&gt;Is it allowed to use .NET preview versions for commercial purposes? #113119&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113116"&gt;For loop condition section throw stack overflow exception in x86 release sdk .net 8 #113116&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113105"&gt;Test failure: System.Net.Quic.Tests.QuicListenerTests.AcceptConnectionAsync_ThrowingCallbackOde_KeepRunning #113105&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/111611"&gt;LoaderAllocator selection logic for a generic type instance does not account for a LoaderAllocator of type itself #111611&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/issues/113097"&gt;InvariantGlobalization does not behave as documented #113097&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;&lt;section&gt;
  &lt;h2&gt;PullRequests&lt;/h2&gt;
  &lt;h3&gt;Created&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113141"&gt;JIT: enhance escape analysis to understand `Span&amp;lt;T&amp;gt;` capture #113141&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113140"&gt;[mono] Speculative assertions for issue 109410 #113140&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-VM-meta-mono&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113137"&gt;Fix issues in GetKeyedService() and GetKeyedServices() with AnyKey #113137&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;breaking-change, area-Extensions-DependencyInjection, needs-breaking-change-doc-created, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113131"&gt;[Wasm] Improve error logging for ES6 module assertion #113131&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;community-contribution, needs-area-label&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113130"&gt;Fix trivial typo #113130&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113129"&gt;Bump rollup from 4.18.0 to 4.34.9 in /src/mono/browser/runtime #113129&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-DependencyModel, javascript&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113128"&gt;Fix test failure from #113051 #113128&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113125"&gt;[RISC-V] Replace load local address with load global #113125&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-VM-coreclr, community-contribution, arch-riscv&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113124"&gt;Link peer's X509 stack handle to parent SSL safe handle #113124&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Net.Security&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113113"&gt;Fix Sve test templates to avoid buffer overrun #113113&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113110"&gt;JIT: Mark unreachable handler regions as cold when using PGO data #113110&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Merged&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113138"&gt;Switch Ubuntu 24.04 testing to use Ubuntu 22.04 temporarily #113138&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Infrastructure-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112957"&gt;Fix exception propagation from managed to native on Unix #112957&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-ExceptionHandling-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112801"&gt;Remove unused file Interop.PFXExportCertStore.cs #112801&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Security&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113092"&gt;Disable ARM NEON path in dn_simdhash due to performance issues #113092&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Infrastructure-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113000"&gt;Harden some reflection invoke tests #113000&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Reflection, test-enhancement&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112460"&gt;Move UMEntryThunk to StubPrecode infrastructure #112460&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-VM-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112457"&gt;Set AppContext.BaseDirectory and the lookup path for AssemblyDirectory to the directory containing the NativeAOT module #112457&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;breaking-change, needs-breaking-change-doc-created, area-NativeAOT-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113026"&gt;[release/9.0-staging] Backport "Ship CoreCLR packages in servicing releases" #113026&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, area-Infrastructure-coreclr, 9.0.4&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113081"&gt;Use invariant culture when formatting capture transfer in regex source generator #113081&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Text.RegularExpressions&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113034"&gt;Support Telemetry Schema Url in tracing and metrics #113034&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;new-api-needs-documentation, area-System.Diagnostics.Metric, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113102"&gt;JIT: stop using ehTrueEnclosingTryIndexIL outside of importation #113102&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112947"&gt;[browser] Generate boot config as javascript module #112947&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;arch-wasm, area-Build-mono, os-browser, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112611"&gt;Use `WriteDoubleLittleEndian` in `NumericGraphemeInfo` #112611&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Runtime, community-contribution, reduce-unsafe&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113093"&gt;JIT: Mark certain intrinsics as non-escaping #113093&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113072"&gt;JIT: Fix icon and vn mismatch in an assertion #113072&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112986"&gt;Allow `MakeGenericType`/`MakeArrayType` of arbitrary types #112986&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-NativeAOT-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113086"&gt;[infra] Add runtime-llvm to build analysis #113086&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Infrastructure-mono&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112404"&gt;[wasm] build paltests #112404&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-PAL-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113091"&gt;Document exceptions in OrderedDictionary #113091&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Collections, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112978"&gt;[RISC-V] Eliminate unnecessary add instruction in array indirection #112978&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution, arch-riscv&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111626"&gt;[RISC-V] Clean up code gen for floating comparisons #111626&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution, arch-riscv&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113078"&gt;Remove unnecessary `GcInfoEncoder::DoNotTrackInPartiallyInterruptible` #113078&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113071"&gt;JIT: Simplify internal GC tracking structures #113071&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112535"&gt;Optimize Min/Max paths with AVX10.2 intrinsics #112535&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113032"&gt;Use minipal_getcpufeatures to detect for AVX #113032&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-GC-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111706"&gt;[main] Fix LoaderAllocator computation for a generic type instance #111706&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-AssemblyLoader-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112939"&gt;[PERF] Enable Android CoreCLR and device startup testing #112939&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Infrastructure&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;h3&gt;Updated&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112824"&gt;Use SSA-based ComputeRange in assertprop #112824&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113095"&gt;Better ARM intrinsics implementation for dn_simdhash #113095&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Infrastructure-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111004"&gt;Experimental PR #111004&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112985"&gt;Separate code manager for the interpreter #112985&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-Interpreter-coreclr, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112704"&gt;TP diff check #112704&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Infrastructure-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111636"&gt;Arm64: Implement region write barriers #111636&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;arch-arm64, area-VM-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113046"&gt;[browser] avoid locks in ST interop #113046&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;arch-wasm, area-System.Runtime.InteropServices.JavaScript, os-browser, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112998"&gt;JIT: enable inlining methods with EH #112998&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111883"&gt;[EventPipe] Add ThreadSessionState cleanup to GetEvent path #111883&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Tracing-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111177"&gt;XML docs for LINQ Join, LeftJoin, RightJoin #111177&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Linq&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112549"&gt;[release/9.0-staging] NativeAOT/Arm64: Do not overwrite gcinfo tracking registers for TLS #112549&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, area-CodeGen-coreclr, 9.0.4&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112863"&gt;arm64: Set zero flag for more comparisons #112863&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/99596"&gt;Implement `ShuffleNative` methods and optimise `Shuffle` for non-constant `indices` #99596&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Runtime.Intrinsics, tenet-performance, new-api-needs-documentation, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113027"&gt;Doc fixes for .NET 10 Preview 1 update #113027&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;needs-area-label&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112997"&gt;[cDAC] Stack walk support more Frame types #112997&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;enhancement, area-Diagnostics-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111771"&gt;Cached interface dispatch for coreclr #111771&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-VM-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112794"&gt;[9.0] Make counting of IO completion work items more precise on Windows #112794&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, area-System.Threading, 9.0.4&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112795"&gt;[8.0] Make counting of IO completion work items more precise on Windows #112795&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, area-System.Threading, 8.0.15&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113094"&gt;[release/9.0-staging] Fix TensorPrimitives.MultiplyAddEstimate for integers #113094&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, area-System.Numerics, 9.0.4&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112719"&gt;Reduce memory footprint of HTTP/2 connections #112719&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Net.Http, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/110206"&gt;Fix `IDE0004` for object comparison #110206&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Meta, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113041"&gt;OSDescription: Returns a user-friendly name instead of kernel info on Android &amp;amp; Apple platforms #113041&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Runtime.InteropServices, os-mac-os-x, os-android, os-ios, os-maccatalyst, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112697"&gt;[RISC-V] Simplify stack probing on riscv64 #112697&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution, arch-riscv&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113037"&gt;JIT: Add morphing to LE_UN/GT_UN(expr, uint.MaxValue) (dotnet#76525) #113037&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111072"&gt;[JIT] Enable conditional chaining for Intel APX #111072&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution, apx&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111543"&gt;Revamp the generation of runtime division checks on ARM64 #111543&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;arch-arm64, area-CodeGen-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112885"&gt;Document NDK upgrade process #112885&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;documentation, needs-area-label&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111610"&gt;Downgrade MethodTables used in reflection invoke #111610&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-NativeAOT-coreclr&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112604"&gt;Modernize `CookieContainer` domain-matching #112604&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Net, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112882"&gt;[release/9.0-staging] Fix HttpHandlerDiagnosticListenerTests.TestW3CHeadersTraceStateAndCorrelationContext #112882&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, area-System.Diagnostics.Tracing, 9.0.x&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112881"&gt;[release/8.0-staging] Fix HttpHandlerDiagnosticListenerTests.TestW3CHeadersTraceStateAndCorrelationContext #112881&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, area-System.Diagnostics.Tracing, 8.0.x&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111643"&gt;Remove a few unsafe bits in BCL #111643&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-Meta, reduce-unsafe&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113082"&gt;Fix R2R files doublemap on UNIX #113082&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-VM-coreclr, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111091"&gt;Use `Unsafe.ReadUnaligned` for vector creation in `SpanHelpers.Fill` #111091&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Memory, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112616"&gt;Avoid `Unsafe.As` in `BitConverter` #112616&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Numerics, community-contribution, reduce-unsafe&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/111292"&gt;Includes type forwarding for System.Text.Unicode.Utf8 to the Microsoft.Bcl.Memory library #111292&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Memory, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113008"&gt;[release/8.0-staging] [browser] Remove experimental args from NodeJS WBT runner #113008&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Servicing-approved, arch-wasm, area-Infrastructure-mono, os-browser, 8.0.x&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113044"&gt;[SGen/Tarjan] Handle edge case with node heaviness changing due to deduplication #113044&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-GC-mono, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/107365"&gt;Fix wrong drive format on Unix #107365&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.IO, community-contribution&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/112693"&gt;[RISC-V] Use zero register as argument for atomics #112693&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-CodeGen-coreclr, community-contribution, arch-riscv&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/runtime/pull/113048"&gt;Perform additional checks in `PEHeaders`. #113048&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;area-System.Reflection.Metadata, community-contribution, 10.0.0&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;</content>
  </entry>
</feed>