<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dotnet/csharplang - Issues &amp; Pull Requests</title>
  <link href="https://github.com/dotnet/csharplang" />
  <updated>2022-01-12T00:03:17Z</updated>
  <id>https://github.com/dotnet/csharplang</id>
  <entry>
    <title>dotnet/csharplang - Issues &amp; Pull Requests - 2022-01-11</title>
    <id>https://github.com/dotnet/csharplang#2022-01-11</id>
    <link href="https://github.com/dotnet/csharplang" />
    <updated>2022-01-12T00:03:17Z</updated>
    <content type="html">&lt;section&gt;
  &lt;h2&gt;Issues&lt;/h2&gt;
  &lt;h3&gt;Updated&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/5552"&gt;[Proposal]: Avoid synthesizing parameterless struct constructors #5552&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/5600"&gt;[Proposal]: `NotNullWhenMember` attribute #5600&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/124"&gt;Champion "Allow Generic Attributes" #124&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Working Set&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/4934"&gt;[Proposal]: Explicit lambda return type #4934&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/4747"&gt;[Proposal]: Enhanced #line directives #4747&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/4487"&gt;[Proposal]: Improved interpolated strings #4487&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/4465"&gt;[Proposal]: Improved Definite Assignment Analysis #4465&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/4394"&gt;Proposal: Extended property patterns #4394&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/4334"&gt;Proposal: record structs #4334&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/4174"&gt;[Proposal]: Records with sealed base ToString override  #4174&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/3530"&gt;[Proposal] Extend with expression to anonymous type #3530&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/3428"&gt;[Proposal] Add ability to declare global usings for namespaces, types and aliases by using a command line switch #3428&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/2951"&gt;Champion "Constant interpolated strings" #2951&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/1407"&gt;Proposal: Allow [AsyncMethodBuilder(...)] on methods #1407&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/287"&gt;Champion "CallerArgumentExpression" #287&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/137"&gt;Proposal: File scoped namespaces #137&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/125"&gt;Champion "Mix Declarations and Variables in Deconstruction" #125&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/99"&gt;Champion "Allow no-arg constructor and field initializers in struct declarations" #99&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;10.0&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;&lt;section&gt;
  &lt;h2&gt;PullRequests&lt;/h2&gt;
  &lt;h3&gt;Updated&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/pull/5550"&gt;Added notes about interpolated strings in nullable flow analysis #5550&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;</content>
  </entry>
</feed>