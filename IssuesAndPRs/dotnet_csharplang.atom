<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dotnet/csharplang - Issues &amp; Pull Requests</title>
  <link href="https://github.com/dotnet/csharplang" />
  <updated>2022-10-29T00:04:38Z</updated>
  <id>https://github.com/dotnet/csharplang</id>
  <entry>
    <title>dotnet/csharplang - Issues &amp; Pull Requests - 2022-10-28</title>
    <id>https://github.com/dotnet/csharplang#2022-10-28</id>
    <link href="https://github.com/dotnet/csharplang" />
    <updated>2022-10-29T00:04:38Z</updated>
    <content type="html">&lt;section&gt;
  &lt;h2&gt;Issues&lt;/h2&gt;
  &lt;h3&gt;Closed&lt;/h3&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6619"&gt;Proposal: Allow null-conditional operators and null-coalescing operators to be overloaded #6619&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6628"&gt;Proposal: by-ref struct operator parameters #6628&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6626"&gt;Ability to create generic types with default containing type? #6626&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6624"&gt;Language support for KeyValuePair&amp;lt;TKey, TValue&amp;gt; struct and tuple mappings #6624&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6622"&gt;`using` declaration on any block #6622&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6620"&gt;tuples and disposable objects #6620&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;Backlog&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6616"&gt;Proposal: Single Function Classes #6616&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6614"&gt;Strange nameof() expression behavior over alias-qualified references #6614&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;div&gt;
        &lt;a href="https://github.com/dotnet/csharplang/issues/6611"&gt;Proposal: move #6611&lt;/a&gt;
      &lt;/div&gt;
      &lt;div&gt;&lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/section&gt;&lt;div /&gt;</content>
  </entry>
</feed>